section .data
    msg1 db 'Qual é o seu nome: ', 0xA ; Mensagem para perguntar o nome
    msg2 db 'Obrigado por usar o código, ', 0xA ; Mensagem de agradecimento
    name db 100 ; Variável para armazenar o nome digitado

section .text
    global _start

_start:
    ; Pergunta o nome
    mov eax, 4 ; Número da chamada do sistema para sys_write
    mov ebx, 1 ; Descritor de arquivo (stdout)
    mov ecx, msg1 ; Endereço da mensagem
    mov edx, 18 ; Comprimento da mensagem
    int 0x80 ; Chama o sistema

    ; Lê o nome digitado
    mov eax, 3 ; Número da chamada do sistema para sys_read
    mov ebx, 0 ; Descritor de arquivo (stdin)
    mov ecx, name ; Buffer para armazenar o nome
    mov edx, 100 ; Comprimento máximo do nome
    int 0x80 ; Chama o sistema

    ; Mostra a mensagem de agradecimento
    mov eax, 4 ; Número da chamada do sistema para sys_write
    mov ebx, 1 ; Descritor de arquivo (stdout)
    mov ecx, msg2 ; Endereço da mensagem de agradecimento
    mov edx, 28 ; Comprimento da mensagem de agradecimento
    int 0x80 ; Chama o sistema

    ; Mostra o nome digitado
    mov eax, 4 ; Número da chamada do sistema para sys_write
    mov ebx, 1 ; Descritor de arquivo (stdout)
    mov ecx, name ; Endereço do nome digitado
    int 0x80 ; Chama o sistema

    ; Termina o programa
    mov eax, 1 ; Número da chamada do sistema para sys_exit
    xor ebx, ebx ; Código de saída 0 (sem erros)
    int 0x80 ; Chama o sistema
